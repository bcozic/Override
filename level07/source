void	clear_stdin()
{
	char	tmp = 0;
	while (tmp != EOF)
	{
		tmp = getchar();
		if (tmp == '\n')
			return ;
	}
}

unsigned int	get_unum()
{
	unsigned int	nb = 0;
	fflush(stdout);
	scanf("%u", nb);
	clear_stdin();
	return (nb);
}

int	store_number(unsigned int *nb_tab)
{
	unsigned int	idx = 0; //0xc
	unsigned int	nb = 0; //0x10

	printf(" Number: ");
	nb = get_unum();
	printf(" Index: ");
	idx = get_unum();
	if (idx - (((0xaaaaaaab * idx) >> 1) * 3) || nb >> 0x18 == 0xb7)
	{
		puts(" *** ERROR! ***");
		puts("   This index is reserved for wil!");
		puts(" *** ERROR! ***");
		return (1);
	}
	nb_tab[idx] = nb;
	return (0);
}

int	read_number(unsigned int *nb_tab)
{
	int		nb = 0;

	printf(" Index: ");
	nb = get_unum();
	printf(" Number at data[%u] is %u\n", nb, nb_tab[nb]);
	return (0);
}

int	main(int ac, char **av, char** envp)
{
	char			**env = envp;
	char			**argv = av;
	unsigned int	nb_tab[106];
	int				return_cmd = 0;
	char			cmd[20];

	memset(cmd, 0, 20);
	memset(nb_tab, 0, 100);
	while (*av)
	{
		memset(*av, 0, strlen(*av));
		av += &(av[1]);
	}
	while (*env)
	{
		memset(*env, 0, strlen(*env));
		env += &(env[1]);
	}
	puts("----------------------------------------------------\n"
			"  Welcome to wil's crappy number storage service!\n"
			"----------------------------------------------------\n"
			" Commands:\n"
			"    store - store a number into the data storage\n"
			"    read  - read a number from the data storage\n"
			"    quit  - exit the program\n"
			"----------------------------------------------------\n"
			"   wil has reserved some storage :>\n"
			"----------------------------------------------------\n");
	while (1)
	{
		printf("Input command: ");
		return_cmd = 1;
		fgets(cmd, 20, stdin);
		((char*)(cmd))[strlen(cmd) -1] = 0;
		if (!memcmp(cmd, "store", 5))
			return_cmd = store_number(nb_tab);
		else if (!memcmp(cmd, "read", 4))
			return_cmd = read_number(nb_tab);
		else if (!memcmp(cmd, "quit", 4))
			break ;
		if (return_cmd != 0)
			printf(" Failed to do %s command\n", cmd);
		else
			printf(" Completed %s command successfully\n", cmd);
		memset(cmd, 0, 20);
	}
	return (0);
}